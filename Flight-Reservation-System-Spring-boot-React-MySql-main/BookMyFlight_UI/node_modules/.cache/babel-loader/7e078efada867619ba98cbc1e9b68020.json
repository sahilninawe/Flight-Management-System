{"ast":null,"code":"import axios from \"axios\";\n\n/**\n * @author Vikrant , Dhananjay\n * Using Axios library to send request to spring boot and fetch response\n * The service method handles operations for booking, ticket and passengers\n */\nexport default class BookingService {\n  constructor() {\n    this.uri = \"http://localhost:8980/book\";\n  }\n\n  // Service method to add booking \n  async addBooking(numberOfSeatsToBook, flightNumber, source, destination, date) {\n    return await axios.post(this.uri + \"/booking\", {\n      numberOfSeatsToBook\n    }, {\n      params: {\n        \"fid\": flightNumber,\n        \"source\": source,\n        \"destination\": destination,\n        \"date\": date\n      }\n    }).then(response => {\n      console.log(response.data);\n      if (response.data.length > 3) {\n        alert(response.data);\n        return response;\n      } else {\n        localStorage.setItem(\"bid\", parseInt(response.data));\n        return response;\n      }\n    });\n  }\n\n  // Service method to add passengers\n  async addPassengers(pass1) {\n    return await axios.post(this.uri + \"/passenger/\" + localStorage.getItem(\"bid\"), pass1).then(response => {\n      console.log(response.data);\n    });\n  }\n\n  // Service method to generate ticket \n  async generateTicket(ticket) {\n    const uid = JSON.parse(localStorage.getItem(\"user\")).userId;\n    return await axios.post(this.uri + \"/ticket/\" + uid + \"/\" + localStorage.getItem(\"bid\") + \"/1\", ticket).then(response => {\n      console.log(response.data);\n      localStorage.setItem(\"ticket\", JSON.stringify(response.data));\n      return response;\n    });\n  }\n\n  // Service method to fetch tickets based on userid\n  async getTickets() {\n    const uid = JSON.parse(localStorage.getItem(\"user\")).userId;\n    return await axios.get(this.uri + \"/getTickets/\" + uid).then(response => {\n      console.log(response.data);\n      // localStorage.setItem(\"tickets\",JSON.stringify(response.data))\n      return response;\n    });\n  }\n}","map":{"version":3,"names":["axios","BookingService","constructor","uri","addBooking","numberOfSeatsToBook","flightNumber","source","destination","date","post","params","then","response","console","log","data","length","alert","localStorage","setItem","parseInt","addPassengers","pass1","getItem","generateTicket","ticket","uid","JSON","parse","userId","stringify","getTickets","get"],"sources":["C:/Users/2317565/OneDrive - Cognizant/Desktop/FMS/Flight-Reservation-System-Spring-boot-React-MySql-main/BookMyFlight_UI/src/services/BookingService.js"],"sourcesContent":["import axios from \"axios\"\n\n/**\n * @author Vikrant , Dhananjay\n * Using Axios library to send request to spring boot and fetch response\n * The service method handles operations for booking, ticket and passengers\n */\nexport default class BookingService {\n    constructor() {\n        this.uri = \"http://localhost:8980/book\";\n    }\n\n    // Service method to add booking \n    async addBooking(numberOfSeatsToBook,flightNumber,source,destination,date) {\n        return await axios.post(this.uri+\"/booking\",{numberOfSeatsToBook},\n        {params:{\"fid\":flightNumber,\"source\":source,\"destination\":destination,\"date\":date}}).then(response => {\n            console.log(response.data)\n            if(response.data.length>3){\n                alert(response.data)\n                return response\n            } else{\n                localStorage.setItem(\"bid\",parseInt(response.data))\n                return response\n            }\n        })\n    }\n\n    // Service method to add passengers\n    async addPassengers(pass1){\n        return await axios.post(this.uri+\"/passenger/\"+localStorage.getItem(\"bid\"),pass1).then(response => {\n            console.log(response.data)\n        })\n    }\n\n    // Service method to generate ticket \n    async generateTicket(ticket){\n        const uid = JSON.parse(localStorage.getItem(\"user\")).userId;\n        return await axios.post(this.uri+\"/ticket/\"+uid+\"/\"+localStorage.getItem(\"bid\")+\"/1\",ticket)\n        .then(response => {\n            console.log(response.data)\n            localStorage.setItem(\"ticket\",JSON.stringify(response.data))\n            return response;\n        })\n    }\n\n    // Service method to fetch tickets based on userid\n    async getTickets() {\n        const uid = JSON.parse(localStorage.getItem(\"user\")).userId;\n        return await axios.get(this.uri+\"/getTickets/\"+uid)\n        .then(response => {\n            console.log(response.data)\n            // localStorage.setItem(\"tickets\",JSON.stringify(response.data))\n            return response;\n        })\n    }\n\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA;AACA;AACA;AACA;AACA,eAAe,MAAMC,cAAc,CAAC;EAChCC,WAAWA,CAAA,EAAG;IACV,IAAI,CAACC,GAAG,GAAG,4BAA4B;EAC3C;;EAEA;EACA,MAAMC,UAAUA,CAACC,mBAAmB,EAACC,YAAY,EAACC,MAAM,EAACC,WAAW,EAACC,IAAI,EAAE;IACvE,OAAO,MAAMT,KAAK,CAACU,IAAI,CAAC,IAAI,CAACP,GAAG,GAAC,UAAU,EAAC;MAACE;IAAmB,CAAC,EACjE;MAACM,MAAM,EAAC;QAAC,KAAK,EAACL,YAAY;QAAC,QAAQ,EAACC,MAAM;QAAC,aAAa,EAACC,WAAW;QAAC,MAAM,EAACC;MAAI;IAAC,CAAC,CAAC,CAACG,IAAI,CAACC,QAAQ,IAAI;MAClGC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACG,IAAI,CAAC;MAC1B,IAAGH,QAAQ,CAACG,IAAI,CAACC,MAAM,GAAC,CAAC,EAAC;QACtBC,KAAK,CAACL,QAAQ,CAACG,IAAI,CAAC;QACpB,OAAOH,QAAQ;MACnB,CAAC,MAAK;QACFM,YAAY,CAACC,OAAO,CAAC,KAAK,EAACC,QAAQ,CAACR,QAAQ,CAACG,IAAI,CAAC,CAAC;QACnD,OAAOH,QAAQ;MACnB;IACJ,CAAC,CAAC;EACN;;EAEA;EACA,MAAMS,aAAaA,CAACC,KAAK,EAAC;IACtB,OAAO,MAAMvB,KAAK,CAACU,IAAI,CAAC,IAAI,CAACP,GAAG,GAAC,aAAa,GAACgB,YAAY,CAACK,OAAO,CAAC,KAAK,CAAC,EAACD,KAAK,CAAC,CAACX,IAAI,CAACC,QAAQ,IAAI;MAC/FC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACG,IAAI,CAAC;IAC9B,CAAC,CAAC;EACN;;EAEA;EACA,MAAMS,cAAcA,CAACC,MAAM,EAAC;IACxB,MAAMC,GAAG,GAAGC,IAAI,CAACC,KAAK,CAACV,YAAY,CAACK,OAAO,CAAC,MAAM,CAAC,CAAC,CAACM,MAAM;IAC3D,OAAO,MAAM9B,KAAK,CAACU,IAAI,CAAC,IAAI,CAACP,GAAG,GAAC,UAAU,GAACwB,GAAG,GAAC,GAAG,GAACR,YAAY,CAACK,OAAO,CAAC,KAAK,CAAC,GAAC,IAAI,EAACE,MAAM,CAAC,CAC3Fd,IAAI,CAACC,QAAQ,IAAI;MACdC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACG,IAAI,CAAC;MAC1BG,YAAY,CAACC,OAAO,CAAC,QAAQ,EAACQ,IAAI,CAACG,SAAS,CAAClB,QAAQ,CAACG,IAAI,CAAC,CAAC;MAC5D,OAAOH,QAAQ;IACnB,CAAC,CAAC;EACN;;EAEA;EACA,MAAMmB,UAAUA,CAAA,EAAG;IACf,MAAML,GAAG,GAAGC,IAAI,CAACC,KAAK,CAACV,YAAY,CAACK,OAAO,CAAC,MAAM,CAAC,CAAC,CAACM,MAAM;IAC3D,OAAO,MAAM9B,KAAK,CAACiC,GAAG,CAAC,IAAI,CAAC9B,GAAG,GAAC,cAAc,GAACwB,GAAG,CAAC,CAClDf,IAAI,CAACC,QAAQ,IAAI;MACdC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACG,IAAI,CAAC;MAC1B;MACA,OAAOH,QAAQ;IACnB,CAAC,CAAC;EACN;AAEJ","ignoreList":[]},"metadata":{},"sourceType":"module"}